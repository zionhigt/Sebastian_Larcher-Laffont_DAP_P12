# Generated by Django 4.0.4 on 2022-05-01 11:43

from django.db import migrations
from guardian.shortcuts import assign_perm


def create_roles(apps, schema_migration):
    Role = apps.get_model('authentication', "Role")
    default_role = [
        "MANAGER",
        "SUPPORT",
        "SALESMAN"
    ]
    for i in default_role:
        try:
            Role.objects.get(name=i)
        except Role.DoesNotExist: 
            role = Role(name=i)
            role.save()

def create_groups(apps, schema_migration):
    User = apps.get_model('authentication', 'User')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    add_user = Permission.objects.get(codename='add_user')
    change_user = Permission.objects.get(codename='change_user')
    delete_user = Permission.objects.get(codename='delete_user')
    view_user = Permission.objects.get(codename='view_user')
    
    manager_permissions = [
        add_user,
        change_user,
        delete_user,
        view_user,
    ]
    
    managers = Group(name='managers')
    managers.save()
    for perm in manager_permissions:
        assign_perm(perm, managers, obj=User)

    supports = Group(name='supports')
    supports.save()
    assign_perm("view_user", supports, obj=User)

    salesmans = Group(name='salesmans')
    salesmans.save()
    assign_perm("view_user", salesmans, obj=User)
    
    for user in User.objects.all():
        if user.role is not None:
            if user.role.name == 'MANAGER':
                managers.user_set.add(user)
            if user.role.name == 'SUPPORT':
                supports.user_set.add(user)
            if user.role.name == 'SALESMAN':
                salesmans.user_set.add(user)


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_role_alter_user_options_user_manager_id_and_more'),
    ]

    operations = [
        migrations.RunPython(create_roles),
        migrations.RunPython(create_groups)
    ]
